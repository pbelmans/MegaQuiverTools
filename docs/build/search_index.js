var documenterSearchIndex = {"docs":
[{"location":"methods/#Methods","page":"All methods","title":"Methods","text":"","category":"section"},{"location":"methods/","page":"All methods","title":"All methods","text":"Here are listed all the available methods of MegaQuiverTools","category":"page"},{"location":"methods/","page":"All methods","title":"All methods","text":"Modules = [MegaQuiverTools]","category":"page"},{"location":"methods/#MegaQuiverTools.Quiver","page":"All methods","title":"MegaQuiverTools.Quiver","text":"A quiver is represented by its adjacency n times n matrix adjacency = (a_ij) where n is the number of vertices and a_ij is the number of arrows i â†’ j.\n\nAttributes:\n\nadjacency is the adjacency matrix of the quiver\nname is the name of the quiver, defaults to \"\".\n\n\n\n\n\n","category":"type"},{"location":"methods/#MegaQuiverTools.EagonNorthcottcomplex-Tuple{Quiver, Vector{Bundle}}","page":"All methods","title":"MegaQuiverTools.EagonNorthcottcomplex","text":"Returns the terms of the Eagon-Northcott complex for the given quiver Q and the summands of the universal representation U. Excludes the 0 term, i.e., the trivial bundle.\n\nExamples:\n\njulia> Q = mKroneckerquiver(2);\njulia> U = [Bundle([-1],1),Bundle([0],1)]\n2-element Vector{Bundle}:\n Bundle of rank 1, with weights: [-1]\n Bundle of rank 1, with weights: [0]\n\njulia> EagonNorthcottcomplex(Q,U)\n1-element Vector{Bundle}:\nBundle of rank 1, with weights: [[-1, -1]]\n\n\njulia> Q = mKroneckerquiver(5);\n\njulia> EagonNorthcottcomplex(Q,U)\n4-element Vector{Bundle}:\n Bundle of rank 10, with weights: [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1]]\n Bundle of rank 20, with weights: [[-1, -2], [-2, -1], [-1, -2], [-2, -1], [-1, -2], [-2, -1], [-1, -2], [-2, -1], [-1, -2], [-2, -1], [-1, -2], [-2, -1], [-1, -2], [-2, -1], [-1, -2], [-2, -1], [-1, -2], [-2, -1], [-1, -2], [-2, -1]]\n Bundle of rank 15, with weights: [[-1, -3], [-2, -2], [-3, -1], [-1, -3], [-2, -2], [-3, -1], [-1, -3], [-2, -2], [-3, -1], [-1, -3], [-2, -2], [-3, -1], [-1, -3], [-2, -2], [-3, -1]]\n Bundle of rank 4, with weights: [[-1, -4], [-2, -3], [-3, -2], [-4, -1]]\n\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.Eulerform-Tuple{Quiver, Vector{Int64}, Vector{Int64}}","page":"All methods","title":"MegaQuiverTools.Eulerform","text":"Computes the Euler form of the quiver for vectors x and y.\n\nThe Euler form is defined as the bilinear form\n\nlangle xyrangle = x^T * E * y\n\nwhere E is the Euler matrix of the quiver.\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.KSmorphism-Tuple{Quiver, Vector{Bundle}}","page":"All methods","title":"MegaQuiverTools.KSmorphism","text":"Returns A and B from the standard 4-term exact sequence:\n\n0 to mathitHom(p^*mathcalUq^*mathcalU) to underbracebigoplus_i in Q_0 mathcalU^vee_i boxtimes mathcalU_i_B^vee to underbracebigoplus_i to j in Q_1 mathcalU^vee_i boxtimes mathcalU_j_A^vee to mathitExt(p^*mathcalUq^*mathcalU) to 0\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.Newtonpolynomial-Tuple{Any}","page":"All methods","title":"MegaQuiverTools.Newtonpolynomial","text":"Returns the \"base change\" function from the symmetric base to the power sum base for the ring of symmetric polynomials. Denoting the symmetric polynomial base by e_i, the power sum base by p_i and the base change function by nu_n such that p_n = nu_n(e_1e_n), this function returns nu_n.\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.Telemanbound_onstratum","page":"All methods","title":"MegaQuiverTools.Telemanbound_onstratum","text":"Computes the weight on det(N_SR_Z) of the 1-PS lambda corresponding to the given HN type.\n\n\n\n\n\n","category":"function"},{"location":"methods/#MegaQuiverTools.allHNtypes","page":"All methods","title":"MegaQuiverTools.allHNtypes","text":"Returns a list of all the Harder Narasimhan types of representations of Q with dimension vector d, with respect to the slope function theta/slope_denominator.\n\n\n\n\n\n","category":"function"},{"location":"methods/#MegaQuiverTools.allTelemanbounds","page":"All methods","title":"MegaQuiverTools.allTelemanbounds","text":"Computes the weight on det(N_SR_Z) of the 1-PS corresponding to each HN type for the given Q, d, theta and denominator.\n\n\n\n\n\n","category":"function"},{"location":"methods/#MegaQuiverTools.all_generic_subdimension_vectors-Tuple{Quiver, Vector{Int64}}","page":"All methods","title":"MegaQuiverTools.all_generic_subdimension_vectors","text":"Returns the list of all generic subdimension vectors of d.\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.all_weights_endomorphisms_universal_bundle","page":"All methods","title":"MegaQuiverTools.all_weights_endomorphisms_universal_bundle","text":"Computes the weights of the endomorphisms of the universal bundles U_i otimes U_j on all the non-dense Harder-Narasimhan strata for each 1-PS relative to the HN type.\n\n\n\n\n\n","category":"function"},{"location":"methods/#MegaQuiverTools.all_weights_irreducible_component_canonical","page":"All methods","title":"MegaQuiverTools.all_weights_irreducible_component_canonical","text":"Computes the weights of the irreducible component of omega_R_Z on all the non-dense Harder-Narasimhan strata for each 1-PS relative to the HN type. More explicitly, if omega_X = O(rH), this returns the weights of the pullback of O(H) on each stratum.\n\n\n\n\n\n","category":"function"},{"location":"methods/#MegaQuiverTools.all_weights_universal_bundle","page":"All methods","title":"MegaQuiverTools.all_weights_universal_bundle","text":"Computes the weights of the universal bundle U_i(a) for the linearization a on all the non-dense Harder-Narasimhan strata for each 1-PS corresponding to each HN type.\n\n\n\n\n\n","category":"function"},{"location":"methods/#MegaQuiverTools.canonical_stability-Tuple{Quiver, Vector{Int64}}","page":"All methods","title":"MegaQuiverTools.canonical_stability","text":"The canonical stability parameter for the couple (Qd) is given by d-  -  - d\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.codimensionHNstratum-Tuple{Quiver, Vector{Vector{Int64}}}","page":"All methods","title":"MegaQuiverTools.codimensionHNstratum","text":"Returns the codimension of the given HN stratum.\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.det-Tuple{Bundle}","page":"All methods","title":"MegaQuiverTools.det","text":"Returns the top exterior power of the bundle V.\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.euler_matrix-Tuple{Quiver}","page":"All methods","title":"MegaQuiverTools.euler_matrix","text":"Returns the Euler matrix of the quiver.\n\nThe Euler matrix of a quiver Q is defined as \n\nE = I - A\n\nwhere A is the adjacency matrix of Q and I is the identity matrix of the same size as A.\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.hassemistables","page":"All methods","title":"MegaQuiverTools.hassemistables","text":"Checks if there is a theta-semistable representation of dimension vector d.\n\nExamples:\n\njulia> A2 = mKroneckerquiver(1)\njulia> theta = [1,-1]\njulia> d = [1,1]\njulia> hassemistables(A2, d, theta)\ntrue\n\njulia> d = [2,2]\njulia> hassemistables(A2, d, theta)\ntrue\n\njulia> d = [1,2]\njulia> hassemistables(A2, d, theta)\nfalse\n\njulia> d = [0,0]\njulia> hassemistables(A2, d, theta)\ntrue\n\n# The 3-Kronecker quiver:\njulia> K3 = mKroneckerquiver(3)\njulia> theta = [3,-2]\njulia> d = [2,3]\njulia> hassemistables(K3, d, theta)\ntrue\n\njulia> d = [1,4]\njulia> hassemistables(K3, d, theta)\nfalse\n\n\n\n\n\n","category":"function"},{"location":"methods/#MegaQuiverTools.hasstables-Tuple{Quiver, Vector{Int64}, Vector{Int64}}","page":"All methods","title":"MegaQuiverTools.hasstables","text":"Checks if Q has a theta-stable representation of dimension vector d.\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.indegree-Tuple{Quiver, Int64}","page":"All methods","title":"MegaQuiverTools.indegree","text":"Returns the number of incoming arrows to the vertex j.\n\nExamples:\n\njulia> Q = mKroneckerquiver(4)\njulia> indegree(Q, 1)\n0\njulia> indegree(Q, 2)\n4\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.isSchurroot-Tuple{Quiver, Vector{Int64}}","page":"All methods","title":"MegaQuiverTools.isSchurroot","text":"Checks if d is a Schur root for Q. By a lemma of Schofield (See Lemma 4.2 of https://arxiv.org/pdf/0802.2147.pdf), this is equivalent to the existence of a stable representation of dimension vector d.\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.is_generic_subdimension_vector-Tuple{Quiver, Vector{Int64}, Vector{Int64}}","page":"All methods","title":"MegaQuiverTools.is_generic_subdimension_vector","text":"Checks if e is a generic subdimension vector of d.\n\nA dimension vector e is called a generic subdimension vector of d if a generic representation of dimension vector d possesses a subrepresentation of dimension vector e.\n\nBy a result of Schofield (see Thm. 5.3 of https://arxiv.org/pdf/0802.2147.pdf) e is a generic subdimension vector of d if and only if ed-e geq 0 for all generic subdimension vectors e' of e.\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.isacyclic-Tuple{Quiver}","page":"All methods","title":"MegaQuiverTools.isacyclic","text":"Checks wether the quiver is acyclic, i.e. has no oriented cycles.\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.isamplystable","page":"All methods","title":"MegaQuiverTools.isamplystable","text":"Checks wether the dimension vector d is amply stable with respect to the slope function theta/denominator.\n\nThis means that the codimension of the unstable locus in the parameter space is at least 2.\n\n\n\n\n\n","category":"function"},{"location":"methods/#MegaQuiverTools.isconnected-Tuple{Quiver}","page":"All methods","title":"MegaQuiverTools.isconnected","text":"Checks wether the underlying graph of the quiver is connected.\n\nExamples:\n\njulia> Q = Quiver([0 1 0; 0 0 1; 1 0 0])\njulia> isconnected(Q)\ntrue\n\njulia> Q = Quiver([0 1 0; 1 0 0; 0 0 2])\nfalse\n\n# The 4-Kronecker quiver:\njulia> Q = mKroneckerquiver(4)\njulia> isconnected(Q)\ntrue\n\n# The 4-loop quiver:\njulia> Q = LoopQuiver(4)\njulia> isconnected(Q)\ntrue\n\n# The 4-subspace quiver:\njulia> Q = SubspaceQuiver(4)\njulia> isconnected(Q)\ntrue\n\n# The A10 quiver:\njulia> A10 = Quiver(   [0 1 0 0 0 0 0 0 0 0;\n                        0 0 1 0 0 0 0 0 0 0;\n                        0 0 0 1 0 0 0 0 0 0;\n                        0 0 0 0 1 0 0 0 0 0;\n                        0 0 0 0 0 1 0 0 0 0;\n                        0 0 0 0 0 0 1 0 0 0;\n                        0 0 0 0 0 0 0 1 0 0;\n                        0 0 0 0 0 0 0 0 1 0;\n                        0 0 0 0 0 0 0 0 0 1;\n                        0 0 0 0 0 0 0 0 0 0] )\njulia> isconnected(A10)\ntrue\n\n# The A10 quiver without one arrow:\njulia> A10 = Quiver(   [0 1 0 0 0 0 0 0 0 0;\n                        0 0 1 0 0 0 0 0 0 0;\n                        0 0 0 1 0 0 0 0 0 0;\n                        0 0 0 0 1 0 0 0 0 0;\n                        0 0 0 0 0 1 0 0 0 0;\n                        0 0 0 0 0 0 0 0 0 0;\n                        0 0 0 0 0 0 0 1 0 0;\n                        0 0 0 0 0 0 0 0 1 0;\n                        0 0 0 0 0 0 0 0 0 1;\n                        0 0 0 0 0 0 0 0 0 0] )\njulia> isconnected(A10)\nfalse\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.iscoprime-Tuple{Vector{Int64}, Vector{Int64}}","page":"All methods","title":"MegaQuiverTools.iscoprime","text":"Checks wether the given dimension vector d is theta-coprime for the stability parameter theta.\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.iscoprime-Tuple{Vector{Int64}}","page":"All methods","title":"MegaQuiverTools.iscoprime","text":"Checks if the gcd of all the entries of d is 1.\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.issink-Tuple{Quiver, Int64}","page":"All methods","title":"MegaQuiverTools.issink","text":"Checks if the vertex j is a sink, i.e., a vertex with no outgoing arrows.\n\nExamples:\n\njulia> Q = mKroneckerquiver(4)\njulia> issink(Q, 1)\nfalse\njulia> issink(Q, 2)\ntrue\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.issource-Tuple{Quiver, Int64}","page":"All methods","title":"MegaQuiverTools.issource","text":"Checks if the vertex i is a source, i.e., a vertex with no incoming arrows.\n\nExamples:\n\njulia> Q = mKroneckerquiver(4)\njulia> issource(Q, 1)\ntrue\njulia> issource(Q, 2)\nfalse\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.narrows-Tuple{Quiver}","page":"All methods","title":"MegaQuiverTools.narrows","text":"Returns the number of arrows of the quiver.\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.nvertices-Tuple{Quiver}","page":"All methods","title":"MegaQuiverTools.nvertices","text":"Returns the number of vertices of the quiver.\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.outdegree-Tuple{Quiver, Int64}","page":"All methods","title":"MegaQuiverTools.outdegree","text":"Returns the number of outgoing arrows from the vertex i.\n\nExamples:\n\njulia> Q = mKroneckerquiver(4)\njulia> outdegree(Q, 1)\n4\njulia> outdegree(Q, 2)\n0\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.symm-Tuple{Bundle, Int64}","page":"All methods","title":"MegaQuiverTools.symm","text":"Returns the k-th symmetric power of the bundle V.\n\nExamples:\n\njulia> U = Bundle([1, 2, 3], 3);\n\njulia> symm(U,0)\nBundle of rank 1 with weights: [0]\njulia> symm(U,1)\nBundle of rank 3 with weights: [1, 2, 3]\njulia> symm(U,2)\nBundle of rank 6 with weights: [2, 3, 4, 4, 5, 6]\njulia> symm(U,3)\nBundle of rank 10 with weights: [3, 4, 5, 5, 6, 7, 6, 7, 8, 9]\njulia> symm(U,4)\nBundle of rank 15 with weights: [4, 5, 6, 6, 7, 8, 7, 8, 9, 10, 8, 9, 10, 11, 12]\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.term_EagonNorthcottcomplex-Tuple{Bundle, Bundle, Int64}","page":"All methods","title":"MegaQuiverTools.term_EagonNorthcottcomplex","text":"\"Returns the r-th term of the Eagon-Northcott complex for the given source and target of the Kodairaâ€“Spencer morphism.\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.underlying_graph-Tuple{Quiver}","page":"All methods","title":"MegaQuiverTools.underlying_graph","text":"Returns the (necessarily symmetric) adjacency matrix of the underlying graph of the quiver.\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.wedge-Tuple{Bundle, Int64}","page":"All methods","title":"MegaQuiverTools.wedge","text":"Returns the k-th wedge power of the bundle V.\n\nExamples:\n\njulia> U = Bundle([1, 2, 3], 3)\nBundle of rank 3 with weights: [1, 2, 3]\n\njulia> wedge(U, 0)\nBundle of rank 1 with weights: [0]\njulia> wedge(U, 1)\nBundle of rank 3 with weights: [1, 2, 3]\njulia> wedge(U, 2)\nBundle of rank 3 with weights: [3, 4, 5]\njulia> wedge(U, 3)\nBundle of rank 1 with weights: [6]\njulia> wedge(U, 4)\nBundle of rank 0 with weights: Int64[]\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.wedge_of_box_product-Tuple{Bundle, Bundle, Any}","page":"All methods","title":"MegaQuiverTools.wedge_of_box_product","text":"Returns k times the box produt of A boxtimes B.\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.wedge_of_tensor-Tuple{Bundle, Bundle, Any}","page":"All methods","title":"MegaQuiverTools.wedge_of_tensor","text":"Returns k times the exterior produt of A otimes B.\n\n\n\n\n\n","category":"method"},{"location":"methods/#MegaQuiverTools.weight_irreducible_component_canonical_on_stratum","page":"All methods","title":"MegaQuiverTools.weight_irreducible_component_canonical_on_stratum","text":"Computes the weight of the irreducible component of omega_R_Z on a Harder-Narasimhan stratum for the 1-PS corresponding to each HN type. More explicitly, if omega_X = O(rH), this returns the weight of the pullback of O(H) on the given stratum.\n\n\n\n\n\n","category":"function"},{"location":"methods/#MegaQuiverTools.weights_endomorphism_universal_bundle_on_stratum","page":"All methods","title":"MegaQuiverTools.weights_endomorphism_universal_bundle_on_stratum","text":"Computes the weights of the endomorphism of the universal bundle U_i otimes U_j on the given Harder-Narasimhan stratum for the 1-PS relative to the HN type.\n\n\n\n\n\n","category":"function"},{"location":"methods/#MegaQuiverTools.weights_universal_bundle_onstratum","page":"All methods","title":"MegaQuiverTools.weights_universal_bundle_onstratum","text":"Returns the weights of a universal bundle U_i(a) for the linearization a for the 1-PS corresponding to the given HN type.\n\n\n\n\n\n","category":"function"},{"location":"methods/#MegaQuiverTools.Î»-Tuple{Any}","page":"All methods","title":"MegaQuiverTools.Î»","text":"Returns the function that takes two lists, [Î»^i(V) for i in 1:n] and [Î»^i(W) for i in 1:n], and returns Î»^n(V * W) as a function of Î»^i(V) and Î»^i(W) for i = 1n. Note that for the notation to make sense, Î»^1(E) = E for all E.\n\n\n\n\n\n","category":"method"},{"location":"#MegaQuiverTools","page":"MegaQuiverTools","title":"MegaQuiverTools","text":"","category":"section"},{"location":"#Contents","page":"MegaQuiverTools","title":"Contents","text":"","category":"section"},{"location":"","page":"MegaQuiverTools","title":"MegaQuiverTools","text":"","category":"page"},{"location":"#Introduction","page":"MegaQuiverTools","title":"Introduction","text":"","category":"section"},{"location":"","page":"MegaQuiverTools","title":"MegaQuiverTools","text":"MegaQuiverTools is a beta version of QuiverTools, a software suite in development for treatment of quiver representations, their roots, their moduli spaces and computations of several invariants of these.","category":"page"},{"location":"","page":"MegaQuiverTools","title":"MegaQuiverTools","text":"Examples of the functionalities of MegaQuiverTools will be:","category":"page"},{"location":"","page":"MegaQuiverTools","title":"MegaQuiverTools","text":"Treatment of Schur roots, canonical decomposition of dimension vectors;\nComputation of the Harder-Narasimhan stratification of the parameter space of quiver moduli;\nComputation of weights of various vector bundles relative to the 1-parameter subgroups associated to each stratum;\nVerification of Teleman quantization criteria;\nConstruction of the Chow ring of a given quiver moduli, computation of Euler characteristics;\nComputation of the Hodge diamond of quiver moduli;\netc.","category":"page"},{"location":"","page":"MegaQuiverTools","title":"MegaQuiverTools","text":"QuiverTools will be available as a Julia package and as a Sage library.","category":"page"},{"location":"","page":"MegaQuiverTools","title":"MegaQuiverTools","text":"Features present in this beta version are","category":"page"},{"location":"","page":"MegaQuiverTools","title":"MegaQuiverTools","text":"Treatment of Harder-Narasimhan stratifications, weight computations;\nChow rings and Euler characteristic computations.","category":"page"},{"location":"#Installation","page":"MegaQuiverTools","title":"Installation","text":"","category":"section"},{"location":"","page":"MegaQuiverTools","title":"MegaQuiverTools","text":"At the moment the package is not registered, so you can install it by running the following command in the Julia REPL:","category":"page"},{"location":"","page":"MegaQuiverTools","title":"MegaQuiverTools","text":"pkg>add https://github.com/Catullo99/MegaQuiverTools.git","category":"page"},{"location":"#Aknowledgements","page":"MegaQuiverTools","title":"Aknowledgements","text":"","category":"section"},{"location":"","page":"MegaQuiverTools","title":"MegaQuiverTools","text":"QuiverTools is being developed by P. Belmans, H. Franzen and G. Petrella.","category":"page"},{"location":"","page":"MegaQuiverTools","title":"MegaQuiverTools","text":"The Julia version is developed and maintained by G. Petrella.","category":"page"},{"location":"","page":"MegaQuiverTools","title":"MegaQuiverTools","text":"G. Petrella was supported by the Luxembourg National Research Fund (FNRâ€“17953441).","category":"page"},{"location":"tutorial/#Tutorial","page":"Tutorial","title":"Tutorial","text":"","category":"section"},{"location":"tutorial/#Installation","page":"Tutorial","title":"Installation","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"At the moment the package is not registered, so you can install it by running the following command in the Julia REPL:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"pkg> add https://github.com/Catullo99/MegaQuiverTools.git","category":"page"},{"location":"tutorial/#Examples","page":"Tutorial","title":"Examples","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"To start using MegaQuiverTools in the REPL, one first must import it.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"julia> using MegaQuiverTools","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Quivers can be built by passing the adjacency matrix to the Quiver() constructor:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"julia> Quiver([0 3; 0 0])\nQuiver([0 3; 0 0], \"\")","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The constructor accepts an optional string for naming the quiver:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"julia> MyQ = Quiver([0 3; 0 0], \"My personal quiver\")\nQuiver([0 3; 0 0], \"My personal quiver\")","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"MegaQuiverTools has several constructors in place for many common examples:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"julia> mKroneckerquiver(4)\nQuiver([0 4; 0 0], \"4-Kronecker quiver\")\njulia> loopquiver(5)\nQuiver([5;;], \"5-loop quiver\")\njulia> subspacequiver(3)\nQuiver([0 0 0 1; 0 0 0 1; 0 0 0 1; 0 0 0 0], \"3-subspace quiver\")\njulia> threevertexquiver(1,6,7)\nQuiver([0 1 6; 0 0 7; 0 0 0], \"An acyclic 3-vertex quiver\")","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Dimension vectors and stability parameters are represented by Vector{Int} objects:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"julia> Q = mKroneckerquiver(3); d = [2,3];\njulia> Î¸ = canonical_stability(Q,d)\n2-element Vector{Int64}:\n  9\n -6\njulia> iscoprime(d,Î¸)\ntrue","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Here, iscoprime() checks if d is Î¸-coprime, i.e., if any proper subdimension vector 0 neq d nleq d satisfies theta cdot d = 0.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The bilinear Euler form relative to a quiver Q of any two vectors in mathbbZQ can be computed:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"julia> Q = mKroneckerquiver(3); d = [2,2]; e = [3,4];\njulia> Eulerform(Q,d,e)\n-10\njulia> Eulerform(Q,e,d)\n-4","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"One can check if semistable, respectively stable representations exist for a given dimension vector and stability parameter:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"julia> Q = mKroneckerquiver(3);\njulia> d = [2,3];\njulia> Î¸ = [3,-2];\njulia> hassemistables(Q,d,Î¸)\ntrue\njulia> hasstables(Q,d,Î¸)\ntrue\n\njulia> K2 = mKroneckerquiver(2)\nQuiver([0 2; 0 0], \"2-Kronecker quiver\")\njulia> hasstables(K2,[2,2],[1,-1])\nfalse\njulia> hassemistables(K2,[2,2],[1,-1])\ntrue","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"One can also determine whether stable representations exist at all for a given dimension vector by checking if it is a Schur root:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"julia> Q = mKroneckerquiver(3); d = [2,2];\njulia> MegaQuiverTools.isSchurroot(Q,d)\ntrue\njulia> K2 = mKroneckerquiver(2);\njulia> MegaQuiverTools.isSchurroot(K2,d)\nfalse","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"To investigate the Harder-Narasimhan stratification of the parameter space mathrmR(Qmathbfd), the module provides a recursive closed formula.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"julia> Q = mKroneckerquiver(3); d = [2,3]; Î¸ = [3,-2];\njulia> allHNtypes(Q,d,Î¸)\n8-element Vector{Vector{Vector{Int64}}}:\n [[2, 3]]\n [[1, 1], [1, 2]]\n [[2, 2], [0, 1]]\n [[2, 1], [0, 2]]\n [[1, 0], [1, 3]]\n [[1, 0], [1, 2], [0, 1]]\n [[1, 0], [1, 1], [0, 2]]\n [[2, 0], [0, 3]]\njulia> isamplystable(Q,d,Î¸)\ntrue","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The method isampystable() determines whether the codimension of the Î¸-semistable locus, mathrmR^theta-sst(Qmathbfd)subsetmathrmR(Qmathbfd), is at least 2.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The method allHNtypes() provides a list of all the Harder-Narasimhan types that appear in the problem.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The method allTelemanbounds() computes the bounds to apply Teleman quantization on the non-dense strata. The output is a dictionary whose keys are the HN types and whose values are the weights themselves.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"julia> Q = mKroneckerquiver(3); d = [2,3]; theta = [3,-2];\njulia> allTelemanbounds(Q,d,theta)\nDict{Vector{Vector{Int64}}, Int64} with 7 entries:\n  [[2, 2], [0, 1]]         => 20\n  [[2, 1], [0, 2]]         => 100\n  [[1, 0], [1, 2], [0, 1]] => 100\n  [[1, 0], [1, 3]]         => 120\n  [[1, 0], [1, 1], [0, 2]] => 90\n  [[1, 1], [1, 2]]         => 15\n  [[2, 0], [0, 3]]         => 90","category":"page"},{"location":"tutorial/#Use-cases","page":"Tutorial","title":"Use cases","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The following are examples of use cases for MegaQuiverTools.jl","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Verify Teleman inequalities","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"In the following example, for each ij and on each Harder-Narasimhan stratum, we compute the weight of mathcalU_i^vee otimes mathcalU_j relative to the 1-PS corresponding to the HN stratum. These are then compared to the Teleman bounds.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"julia> Q = mKroneckerquiver(3); d = [2,3]; theta = [3,-2];\njulia> hn = allTelemanbounds(Q,d,theta)\nDict{Vector{Vector{Int64}}, Int64} with 7 entries:\n  [[2, 2], [0, 1]]         => 20\n  [[2, 1], [0, 2]]         => 100\n  [[1, 0], [1, 2], [0, 1]] => 100\n  [[1, 0], [1, 3]]         => 120\n  [[1, 0], [1, 1], [0, 2]] => 90\n  [[1, 1], [1, 2]]         => 15\n  [[2, 0], [0, 3]]         => 90\n\njulia> endom = MegaQuiverTools.all_weights_endomorphisms_universal_bundle(Q,d,theta)\nDict{Vector{Vector{Int64}}, Int64} with 7 entries:\n  [[2, 2], [0, 1]]         => 5\n  [[2, 1], [0, 2]]         => 10\n  [[1, 0], [1, 2], [0, 1]] => 15\n  [[1, 0], [1, 3]]         => 15\n  [[1, 0], [1, 1], [0, 2]] => 10\n  [[1, 1], [1, 2]]         => 5\n  [[2, 0], [0, 3]]         => 5\n\njulia> check = all(endom[key] < hn[key] for key in keys(hn))\ntrue","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The fact that all of these inequalities are satisfied allows to conclude that the higher cohomology of mathcalU_i^vee otimes mathcalU_j vanishes.","category":"page"},{"location":"tutorial/#Bundle-library","page":"Tutorial","title":"Bundle library","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"MegaQuiverTools contains a basic implementation of Bundle objects.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"These are meant to be used as containers to perform computations with weights or linearizations.","category":"page"},{"location":"tutorial/#Functionality","page":"Tutorial","title":"Functionality","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"One can create a Bundle object by passing a list of weights and the rank to the constructor:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"julia> Bundle([1, 2, 3], 3)\nBundle of rank 3 with weights: [1, 2, 3]","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Note: the rank is not computed automatically from the weights. This is a design choice, to force a sanity check on the user. Should there be the necessity to bypass this, the expected rank is the length of the list of weights.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Direct sum, tensor product, wedge and symmetric product are implemented:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"julia> U = Bundle([1, 2, 3], 3); V = Bundle([4, 5], 2);\njulia> U âŠ• V\nBundle of rank 5 with weights: [1, 2, 3, 4, 5]\n\njulia> U âŠ— V\nBundle of rank 6 with weights: [5, 6, 6, 7, 7, 8]\n\njulia> det(U)\nBundle of rank 1 with weights: [6]\n\njulia> wedge(U, 0)\nBundle of rank 1 with weights: [0]\njulia> wedge(U, 1)\nBundle of rank 3 with weights: [1, 2, 3]\njulia> wedge(U, 2)\nBundle of rank 3 with weights: [3, 4, 5]\njulia> wedge(U, 3)\nBundle of rank 1 with weights: [6]\njulia> wedge(U, 4)\nBundle of rank 0 with weights: Int64[]\n\njulia> symm(U,0)\nBundle of rank 1 with weights: [0]\njulia> symm(U,1)\nBundle of rank 3 with weights: [1, 2, 3]\njulia> symm(U,2)\nBundle of rank 6 with weights: [2, 3, 4, 4, 5, 6]\njulia> symm(U,3)\nBundle of rank 10 with weights: [3, 4, 5, 5, 6, 7, 6, 7, 8, 9]\njulia> symm(U,4)\nBundle of rank 15 with weights: [4, 5, 6, 6, 7, 8, 7, 8, 9, 10, 8, 9, 10, 11, 12]","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"A basic implementation of box products is also available:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"\njulia> U = Bundle([1, 2, 3], 3); V = Bundle([4, 5], 2);\njulia> a = U âŠ  V\nBundle of rank 6 with weights: [[1, 4], [1, 5], [2, 4], [2, 5], [3, 4], [3, 5]]\njulia> b = V âŠ  V\nBundle of rank 4 with weights: [[4, 4], [4, 5], [5, 4], [5, 5]]\n\n\n\njulia> a âŠ— b\nBundle of rank 24 with weights: [[5, 8], [5, 9], [6, 8], [6, 9], [5, 9], [5, 10], [6, 9], [6, 10], [6, 8], [6, 9], [7, 8], [7, 9], [6, 9], [6, 10], [7, 9], [7, 10], [7, 8], [7, 9], [8, 8], [8, 9], [7, 9], [7, 10], [8, 9], [8, 10]]\n\njulia> a âŠ• b\nBundle of rank 10 with weights: [[1, 4], [1, 5], [2, 4], [2, 5], [3, 4], [3, 5], [4, 4], [4, 5], [5, 4], [5, 5]]\n\njulia> wedge(b,2)\nBundle of rank 6 with weights: [[8, 9], [9, 8], [9, 9], [9, 9], [9, 10], [10, 9]]\n\njulia> wedge(b,3)\nBundle of rank 4 with weights: [[13, 13], [13, 14], [14, 13], [14, 14]]\n\njulia> wedge(b,5)\nBundle of rank 0 with weights: Vector{Int64}[]\n\njulia> symm(a,2)\nBundle of rank 21 with weights: [[2, 8], [2, 9], [3, 8], [3, 9], [4, 8], [4, 9], [2, 10], [3, 9], [3, 10], [4, 9], [4, 10], [4, 8], [4, 9], [5, 8], [5, 9], [4, 10], [5, 9], [5, 10], [6, 8], [6, 9], [6, 10]]","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"One use case is creating Bundle objects containing weights of linearisations with respect to 1-PSs and then verifying Teleman inequality for objects built with complex combinations of tensor, box and exterior products.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Another use case is defining line bundles on a projective space and then computing the effects of direct summands, tensor products and exterior products on the linearization. One such example is the computation of the Eagon-Northcott complex for P^n, done below.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"julia> Q = mKroneckerquiver(2);\njulia> U = [Bundle([-1], 1),Bundle([0], 1)]\n2-element Vector{Bundle}:\n  Bundle of rank 1, with weights: [-1]\n  Bundle of rank 1, with weights: [0]\n\njulia> EagonNorthcottcomplex(Q,U)\n1-element Vector{Bundle}:\n  Bundle of rank 1, with weights: [[-1, -1]]\n\n\njulia> Q = mKroneckerquiver(5);\njulia> EagonNorthcottcomplex(Q,U)\n4-element Vector{Bundle}:\n  Bundle of rank 10, with weights: [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1]]\n  Bundle of rank 20, with weights: [[-1, -2], [-2, -1], [-1, -2], [-2, -1], [-1, -2], [-2, -1], [-1, -2], [-2, -1], [-1, -2], [-2, -1], [-1, -2], [-2, -1], [-1, -2], [-2, -1], [-1, -2], [-2, -1], [-1, -2], [-2, -1], [-1, -2], [-2, -1]]\n  Bundle of rank 15, with weights: [[-1, -3], [-2, -2], [-3, -1], [-1, -3], [-2, -2], [-3, -1], [-1, -3], [-2, -2], [-3, -1], [-1, -3], [-2, -2], [-3, -1], [-1, -3], [-2, -2], [-3, -1]]\n  Bundle of rank 4, with weights: [[-1, -4], [-2, -3], [-3, -2], [-4, -1]]","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Each Bundle object contains a rank and a list of weights.","category":"page"}]
}
